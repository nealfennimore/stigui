1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
5:I[9665,[],"MetadataBoundary"]
7:I[9665,[],"OutletBoundary"]
a:I[4911,[],"AsyncMetadataOutlet"]
c:I[9665,[],"ViewportBoundary"]
e:I[6614,[],""]
:HL["/_next/static/media/4473ecc91f70f139-s.p.woff","font",{"crossOrigin":"","type":"font/woff"}]
:HL["/_next/static/media/463dafcda517f24f-s.p.woff","font",{"crossOrigin":"","type":"font/woff"}]
:HL["/_next/static/css/9cc64c7769c1a171.css","style"]
0:{"P":null,"b":"OjZ_aF9qCqOraU9JHBb2f","p":"","c":["","stigs","IBM_WebSphere_Liberty_Server_STIG","groups","V-250330"],"i":false,"f":[[["",{"children":["stigs",{"children":[["stig_id","IBM_WebSphere_Liberty_Server_STIG","d"],{"children":["groups",{"children":[["group_id","V-250330","d"],{"children":["__PAGE__",{}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/9cc64c7769c1a171.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","script",null,{"src":"/service-worker.js"}]}],["$","body",null,{"className":"__variable_1e4310 __variable_c3aa02 antialiased dark:bg-zinc-900 dark:text-zinc-100","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["stigs",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["stig_id","IBM_WebSphere_Liberty_Server_STIG","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["groups",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["group_id","V-250330","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",["$","$L5",null,{"children":"$L6"}],null,["$","$L7",null,{"children":["$L8","$L9",["$","$La",null,{"promise":"$@b"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","5B3GEyKrp5nD48B6nr5KK",{"children":[["$","$Lc",null,{"children":"$Ld"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:"$Sreact.suspense"
10:I[4911,[],"AsyncMetadata"]
12:I[4125,["167","static/chunks/167-b3e7b4d5189ed581.js","548","static/chunks/548-f06b7c228719bffd.js","402","static/chunks/app/stigs/%5Bstig_id%5D/groups/%5Bgroup_id%5D/page-a962920e3e20f95a.js"],"default"]
13:I[2272,["167","static/chunks/167-b3e7b4d5189ed581.js","548","static/chunks/548-f06b7c228719bffd.js","402","static/chunks/app/stigs/%5Bstig_id%5D/groups/%5Bgroup_id%5D/page-a962920e3e20f95a.js"],"default"]
14:I[2350,["167","static/chunks/167-b3e7b4d5189ed581.js","548","static/chunks/548-f06b7c228719bffd.js","402","static/chunks/app/stigs/%5Bstig_id%5D/groups/%5Bgroup_id%5D/page-a962920e3e20f95a.js"],"Navigation"]
15:I[1333,["167","static/chunks/167-b3e7b4d5189ed581.js","548","static/chunks/548-f06b7c228719bffd.js","402","static/chunks/app/stigs/%5Bstig_id%5D/groups/%5Bgroup_id%5D/page-a962920e3e20f95a.js"],"GroupView"]
6:["$","$f",null,{"fallback":null,"children":["$","$L10",null,{"promise":"$@11"}]}]
4:["$","$L12",null,{"children":["$","$L13",null,{"stigId":"IBM_WebSphere_Liberty_Server_STIG","children":[["$","$L14",null,{}],["$","div",null,{"className":"grid grid-rows-[20px_1fr_20px] items-center justify-items-center p-8 md:p-6 max-sm:p-2 pb-20 gap-16 font-[family-name:var(--font-geist-sans)]","children":[["$","main",null,{"className":"flex flex-col gap-8 row-start-2 items-center sm:items-start max-w-screen-xl","children":["$","$L15",null,{"stigId":"IBM_WebSphere_Liberty_Server_STIG","groupId":"V-250330"}]}],["$","footer",null,{"className":"row-start-3 flex gap-6 flex-wrap items-center justify-center"}]]}],["$","footer",null,{"className":"bg-white dark:bg-zinc-900 border-t border-zinc-200 dark:border-zinc-700","children":["$","div",null,{"className":"w-full max-w-screen-xl mx-auto p-4 md:py-8","children":[["$","span",null,{"className":"block text-sm text-zinc-500 sm:text-center","children":["$","div",null,{"className":"flex flex-row items-center justify-center","children":["Not affiliated with DISA.",["$","a",null,{"href":"https://github.com/nealfennimore/stig","className":"block text-sm text-zinc-500 sm:text-center","tabIndex":100,"children":["$","svg",null,{"className":"w-5 h-5 mx-4","aria-hidden":"true","xmlns":"http://www.w3.org/2000/svg","fill":"currentColor","viewBox":"0 0 20 20","children":["$","path",null,{"fillRule":"evenodd","d":"M10 .333A9.911 9.911 0 0 0 6.866 19.65c.5.092.678-.215.678-.477 0-.237-.01-1.017-.014-1.845-2.757.6-3.338-1.169-3.338-1.169a2.627 2.627 0 0 0-1.1-1.451c-.9-.615.07-.6.07-.6a2.084 2.084 0 0 1 1.518 1.021 2.11 2.11 0 0 0 2.884.823c.044-.503.268-.973.63-1.325-2.2-.25-4.516-1.1-4.516-4.9A3.832 3.832 0 0 1 4.7 7.068a3.56 3.56 0 0 1 .095-2.623s.832-.266 2.726 1.016a9.409 9.409 0 0 1 4.962 0c1.89-1.282 2.717-1.016 2.717-1.016.366.83.402 1.768.1 2.623a3.827 3.827 0 0 1 1.02 2.659c0 3.807-2.319 4.644-4.525 4.889a2.366 2.366 0 0 1 .673 1.834c0 1.326-.012 2.394-.012 2.72 0 .263.18.572.681.475A9.911 9.911 0 0 0 10 .333Z","clipRule":"evenodd"}]}]}]]}]}],["$","span",null,{"className":"block text-sm text-zinc-500 sm:text-center flex flex-row items-center justify-center","children":["Â© 2025"," ",["$","a",null,{"href":"https://neal.codes","className":"hover:underline mx-1","tabIndex":70,"children":"neal.codes"}],"All Rights Reserved."]}]]}]}]]}]}]
9:null
d:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:null
16:Ta45,Protection of log records is of critical importance. Encrypting log records provides a level of protection that does not rely on host-based protections that can be accidentally misconfigured, such as file system permissions. Cryptographic mechanisms are the industry-established standard used to protect the integrity of log data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography. 

- The security feature (appSecurity-2.0) must be defined in order to configure a user registry for the servlet to authenticate against.  
- The audit feature (audit-1.0) must be defined in order to generate audit records.
- The servlet feature (servlet-3.1) must be defined to be able to deploy a web application. 
- The ejb feature (ejbLite-3.1) must be defined to be able to deploy an ejb application.
- The ssl feature (ssl-1.0) must be defined to be able to generate and use certificates to sign and encrypt logs.
- The ldap feature (ldapRegistry-3.0) must be defined in order to configure an enterprise-level user registry to authenticate users against.

When the audit-1.0 feature is defined, all supported audit events will be captured and logged to an audit.log located under ${server.config.dir}/logs.

The audit log that is currently being logged to is called audit.log. When an audit log fills to a configured maximum capacity, it is archived with a timestamp with the naming convention audit_<timestamp>.log and new records are written to audit.log. 

The audit logs are found under the ${server.config.dir}/logs directory and are named audit.log for the most recent, and audit_<timestamp>.log for any archived logs. 

One keystore needs to be created (ikeyman as part of the JDK may be used) and a personal certificate created. This certificate is used to encrypt the logs. The audit configuration needs to define the location of this keystore, its password, and the alias of the certificate used to encrypt the logs. As an example:        
 <keyStore
         id="auditEncKeyStore"
         password="Liberty"
         location="${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks"
         type="JKS" />

      <keyStore
         id="auditSignKeyStore"
         password="{xor}EzY9Oi0rJg=="
         location="${server.config.dir}/resources/security/AuditSigningKeyStore2.jks"
         type="JKS" />

<auditFileHandler 
encrypt="true"
        encryptAlias="auditencryption"
        encryptKeyStoreRef="auditEncKeyStore"
</auditFileHandler>

Satisfies: SRG-APP-000126-AS-000085, SRG-APP-000118-AS-000078, SRG-APP-000267-AS-00017017:Ta45,Protection of log records is of critical importance. Encrypting log records provides a level of protection that does not rely on host-based protections that can be accidentally misconfigured, such as file system permissions. Cryptographic mechanisms are the industry-established standard used to protect the integrity of log data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography. 

- The security feature (appSecurity-2.0) must be defined in order to configure a user registry for the servlet to authenticate against.  
- The audit feature (audit-1.0) must be defined in order to generate audit records.
- The servlet feature (servlet-3.1) must be defined to be able to deploy a web application. 
- The ejb feature (ejbLite-3.1) must be defined to be able to deploy an ejb application.
- The ssl feature (ssl-1.0) must be defined to be able to generate and use certificates to sign and encrypt logs.
- The ldap feature (ldapRegistry-3.0) must be defined in order to configure an enterprise-level user registry to authenticate users against.

When the audit-1.0 feature is defined, all supported audit events will be captured and logged to an audit.log located under ${server.config.dir}/logs.

The audit log that is currently being logged to is called audit.log. When an audit log fills to a configured maximum capacity, it is archived with a timestamp with the naming convention audit_<timestamp>.log and new records are written to audit.log. 

The audit logs are found under the ${server.config.dir}/logs directory and are named audit.log for the most recent, and audit_<timestamp>.log for any archived logs. 

One keystore needs to be created (ikeyman as part of the JDK may be used) and a personal certificate created. This certificate is used to encrypt the logs. The audit configuration needs to define the location of this keystore, its password, and the alias of the certificate used to encrypt the logs. As an example:        
 <keyStore
         id="auditEncKeyStore"
         password="Liberty"
         location="${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks"
         type="JKS" />

      <keyStore
         id="auditSignKeyStore"
         password="{xor}EzY9Oi0rJg=="
         location="${server.config.dir}/resources/security/AuditSigningKeyStore2.jks"
         type="JKS" />

<auditFileHandler 
encrypt="true"
        encryptAlias="auditencryption"
        encryptKeyStoreRef="auditEncKeyStore"
</auditFileHandler>

Satisfies: SRG-APP-000126-AS-000085, SRG-APP-000118-AS-000078, SRG-APP-000267-AS-00017018:Ta45,Protection of log records is of critical importance. Encrypting log records provides a level of protection that does not rely on host-based protections that can be accidentally misconfigured, such as file system permissions. Cryptographic mechanisms are the industry-established standard used to protect the integrity of log data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography. 

- The security feature (appSecurity-2.0) must be defined in order to configure a user registry for the servlet to authenticate against.  
- The audit feature (audit-1.0) must be defined in order to generate audit records.
- The servlet feature (servlet-3.1) must be defined to be able to deploy a web application. 
- The ejb feature (ejbLite-3.1) must be defined to be able to deploy an ejb application.
- The ssl feature (ssl-1.0) must be defined to be able to generate and use certificates to sign and encrypt logs.
- The ldap feature (ldapRegistry-3.0) must be defined in order to configure an enterprise-level user registry to authenticate users against.

When the audit-1.0 feature is defined, all supported audit events will be captured and logged to an audit.log located under ${server.config.dir}/logs.

The audit log that is currently being logged to is called audit.log. When an audit log fills to a configured maximum capacity, it is archived with a timestamp with the naming convention audit_<timestamp>.log and new records are written to audit.log. 

The audit logs are found under the ${server.config.dir}/logs directory and are named audit.log for the most recent, and audit_<timestamp>.log for any archived logs. 

One keystore needs to be created (ikeyman as part of the JDK may be used) and a personal certificate created. This certificate is used to encrypt the logs. The audit configuration needs to define the location of this keystore, its password, and the alias of the certificate used to encrypt the logs. As an example:        
 <keyStore
         id="auditEncKeyStore"
         password="Liberty"
         location="${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks"
         type="JKS" />

      <keyStore
         id="auditSignKeyStore"
         password="{xor}EzY9Oi0rJg=="
         location="${server.config.dir}/resources/security/AuditSigningKeyStore2.jks"
         type="JKS" />

<auditFileHandler 
encrypt="true"
        encryptAlias="auditencryption"
        encryptKeyStoreRef="auditEncKeyStore"
</auditFileHandler>

Satisfies: SRG-APP-000126-AS-000085, SRG-APP-000118-AS-000078, SRG-APP-000267-AS-00017011:{"metadata":[["$","title","0",{"children":"STIGs | IBM WebSphere Liberty Server Security Technical Implementation Guide | The WebSphere Liberty Server must be configured to encrypt log information."}],["$","meta","1",{"name":"description","content":"$16"}],["$","meta","2",{"name":"application-name","content":"STIGUI"}],["$","meta","3",{"name":"keywords","content":"V-250330,C-53765r862973_chk,F-53719r862974_fix,medium,IBMW-LS-000320"}],["$","meta","4",{"name":"creator","content":"DISA"}],["$","meta","5",{"name":"publisher","content":"DISA"}],["$","meta","6",{"property":"og:title","content":"STIGs | IBM WebSphere Liberty Server Security Technical Implementation Guide | The WebSphere Liberty Server must be configured to encrypt log information."}],["$","meta","7",{"property":"og:description","content":"$17"}],["$","meta","8",{"property":"og:url","content":"https://stigui.com/stigs/IBM_WebSphere_Liberty_Server_STIG/groups/V-250330"}],["$","meta","9",{"property":"og:site_name","content":"STIGUI"}],["$","meta","10",{"property":"og:type","content":"article"}],["$","meta","11",{"property":"article:published_time","content":"2025-02-11T00:00:00.000Z"}],["$","meta","12",{"property":"article:author","content":"DISA"}],["$","meta","13",{"property":"article:tag","content":"V-250330"}],["$","meta","14",{"property":"article:tag","content":"C-53765r862973_chk"}],["$","meta","15",{"property":"article:tag","content":"F-53719r862974_fix"}],["$","meta","16",{"property":"article:tag","content":"medium"}],["$","meta","17",{"property":"article:tag","content":"IBMW-LS-000320"}],["$","meta","18",{"name":"twitter:card","content":"summary"}],["$","meta","19",{"name":"twitter:title","content":"STIGs | IBM WebSphere Liberty Server Security Technical Implementation Guide | The WebSphere Liberty Server must be configured to encrypt log information."}],["$","meta","20",{"name":"twitter:description","content":"$18"}],["$","link","21",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
b:{"metadata":"$11:metadata","error":null,"digest":"$undefined"}
